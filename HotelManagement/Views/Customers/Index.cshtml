@model LCount<Customer>
@using HotelManagement.Utils

@{
    ViewBag.Title = "Khách hàng";
    Layout = "_Layout";

    var options = new TableOptions
    {
        Sort = ViewBag.Sort,
        Order = ViewBag.Order,
        ActionName = "Index",
        ControllerName = "Customers",
        Page = ViewBag.Page,
        Size = ViewBag.Size,
        Keyword = ViewBag.Keyword
    };
}

<div class="card shadow mb-4">
    <div class="card-header py-3 d-flex">
        <div>
            <button type="button" class="btn btn-success" onclick="add()">Thêm</button>
            <button type="button" class="btn btn-danger" id="deleteButton" onclick="deleteSelected()" disabled>Xóa</button>
        </div>
        <form class="form-inline ml-auto">
            <div class="form-group">
                <input type="text" class="form-control mr-sm-2" placeholder="Tìm kiếm..." name="keyword" value="@ViewBag.Keyword" id="search-input">
            </div>
            <button type="submit" class="btn btn-primary" id="search-btn">Tìm kiếm</button>
        </form>
    </div>
    <div class="card-body">
        <div class="table-responsive">
            <table class="table table-bordered" width="100%" cellspacing="0">
                <thead>
                <tr>
                    <th class="text-center">
                        <input type="checkbox" id="selectAll" class=""/>
                    </th>
                    <th>
                        Họ tên
                        @{
                            options.Column = "fullName";
                            @TableHelpers.GetSortArrow(options, Url)
                        }
                    </th>
                    <th>
                        Giới tính
                        @{
                            options.Column = "sex";
                            @TableHelpers.GetSortArrow(options, Url)
                        }
                    </th>
                    <th>
                        Ngày sinh
                        @{
                            options.Column = "birthdate";
                            @TableHelpers.GetSortArrow(options, Url)
                        }
                    </th>
                    <th>
                        Số điện thoại
                        @{
                            options.Column = "phoneNumber";
                            @TableHelpers.GetSortArrow(options, Url)
                        }
                    </th>
                    <th>
                        CMT/Hộ chiếu
                        @{
                            options.Column = "idNo";
                            @TableHelpers.GetSortArrow(options, Url)
                        }
                    </th>
                    <th>
                        Quốc tịch
                        @{
                            options.Column = "nationality";
                            @TableHelpers.GetSortArrow(options, Url)
                        }
                    </th>
                    <th>Thao tác</th>
                </tr>
                </thead>
                <tbody>
                @foreach (var customer in Model.Items)
                {
                    <tr>
                        <td class="text-center">
                            <input type="checkbox" class="rowCheckbox " name="selectedCustomers" value="@customer.Id"/>
                        </td>
                        <td>@customer.FullName</td>
                        <td>
                            @if (!customer.Sex)
                            {
                                @("Nữ")
                            }
                            else
                            {
                                @("Nam")
                            }
                        </td>
                        <td>@Html.DisplayFor(_ => customer.Birthdate)</td>
                        <td>@customer.PhoneNumber</td>
                        <td>@customer.IdNo</td>
                        <td>@customer.Nationality</td>
                        <td>
                            <button type="button" class="btn btn-primary btn-sm" onclick="edit('@customer.Id')">Sửa</button>
                            <button type="button" class="btn btn-danger btn-sm" onclick="deleteCustomer('@customer.Id')">Xóa</button>
                        </td>
                    </tr>
                }
                </tbody>
            </table>
            <nav aria-label="Page navigation">
                <ul class="pagination">
                    @{
                        int totalPage = (int)Math.Ceiling((double)Model.Total / ViewBag.Size);
                    }
                    <li class="page-item @(ViewBag.Page == 1 ? "disabled" : "")">
                        <a class="page-link" href="@Url.Action("Index", new { ViewBag.keyword, page = 1, size = ViewBag.Size, sort = ViewBag.Sort, order = ViewBag.Order })">Đầu</a>
                    </li>
                    @for (int i = 1; i <= totalPage; i++)
                    {
                        <li class="page-item @(i == ViewBag.Page ? "active" : "")">
                            <a class="page-link" href="@Url.Action("Index", new { ViewBag.keyword, page = i, size = ViewBag.Size, sort = ViewBag.Sort, order = ViewBag.Order })">@i</a>
                        </li>
                    }
                    <li class="page-item @(ViewBag.Page == totalPage ? "disabled" : "")">
                        <a class="page-link" href="@Url.Action("Index", new { ViewBag.keyword, page = totalPage, size = ViewBag.Size, sort = ViewBag.Sort, order = ViewBag.Order })">Cuối</a>
                    </li>
                </ul>
            </nav>
        </div>
    </div>
</div>

<!-- Customer Modal -->
<div class="modal fade" id="customerModal" tabindex="-1" aria-labelledby="customerModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="customerModalLabel">Thêm/Sửa</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form id="customerForm">
                    <input type="hidden" id="customerId" name="customerId"/>
                    <input type="hidden" id="fullName" name="fullName" />

                    <div class="row">
                        <div class="form-group col">
                            <label for="lastName">Họ</label>
                            <input type="text" class="form-control" id="lastName" name="lastName" required/>
                        </div>
                        <div class="form-group col">
                            <label for="firstName">Tên</label>
                            <input type="text" class="form-control" id="firstName" name="firstName" required/>
                        </div>
                    </div>
                    <div class="form-group">
                        <label for="sex" class="d-block">Giới tính</label>
                        <div class="form-check form-check-inline" id="sex">
                            <input class="form-check-input" type="radio" name="sex" id="male" value="male" checked>
                            <label class="form-check-label" for="male">
                                Nam
                            </label>
                        </div>
                        <div class="form-check form-check-inline">
                            <input class="form-check-input" type="radio" name="sex" id="female" value="female">
                            <label class="form-check-label" for="female">
                                Nữ
                            </label>
                        </div>
                    </div>
                    <div class="row">
                        <div class="form-group col">
                            <label for="birthdate">Ngày sinh</label>
                            <input type="date" class="form-control" id="birthdate" required placeholder="MM/dd/yyyy">
                        </div>
                        <div class="form-group col">
                            <label for="phoneNumber">Số điện thoại</label>
                            <input type="tel" class="form-control" id="phoneNumber">
                        </div>
                    </div>
                    <div class="row">
                        <div class="form-group col">
                            <label for="idNo">CMT/Hộ chiếu</label>
                            <input type="text" class="form-control" id="idNo" required>
                        </div>
                        <div class="form-group col">
                            <label for="nationality">Quốc tịch</label>
                            <input type="text" class="form-control" id="nationality" required>
                        </div>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Đóng</button>
                <button type="button" class="btn btn-primary" onclick="saveCustomer()">Lưu</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
    
        $('#search-btn').click(function(e) {
            e.preventDefault();
            var keyword = $('#search-input').val();
            var url = '@Url.Action("Index", new { page = 1, size = ViewBag.Size, sort = ViewBag.Sort, order = ViewBag.Order })';
            url = url + '&keyword=' + encodeURIComponent(keyword);
            
            // Thay thế ký tự "&amp;" bằng ký tự "&"
            url = url.replace(/&amp;/g, '&');
            
            window.location.href = url;
        });
    
        // Xử lý sự kiện click cho checkbox chọn tất cả
        $('#selectAll').on('click', function () {
            let isChecked = $(this).is(':checked');
            $('.rowCheckbox').prop('checked', isChecked);
            updateDeleteButton(); // Cập nhật trạng thái nút Xóa
        });

        // Xử lý sự kiện click cho checkbox của từng dòng
        $('.rowCheckbox').on('click', function () {
            let totalCheckboxes = $('.rowCheckbox').length;
            let checkedCheckboxes = $('.rowCheckbox:checked').length;

            // Nếu tất cả các checkbox đều được chọn, đánh dấu checkbox chọn tất cả
            // Ngược lại, bỏ đánh dấu checkbox chọn tất cả
            $('#selectAll').prop('checked', totalCheckboxes === checkedCheckboxes);

            updateDeleteButton(); // Cập nhật trạng thái nút Xóa
        });

        async function getCustomerById(customerId) {
            let response = await fetch(`/Customers/GetById/${customerId}`);
            
            return await response.json();
        }

        async function createCustomer(customer) {
            let response = await fetch('/Customers/Create', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(customer)
            });
            
            if (response.ok) {
                location.reload();
            } else {
                showAlert('Đã xảy ra lỗi khi thêm khách hàng', 'danger');
            }
        }

        async function updateCustomer(id, customer) {
            let response = await fetch(`/Customers/Update/${id}`, {
                method: 'PUT',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(customer)
            });

            if (response.ok) {
                location.reload();
            } else {
                showAlert('Đã xảy ra lỗi khi cập nhật khách hàng', 'danger');
            }
        }

        async function deleteCustomer(customerId) {
            showConfirmDialog('Bạn có chắc chắn muốn xóa khách hàng này không?',
            async () => {
                let response = await fetch(`/Customers/Delete/${customerId}`, {
                    method: 'DELETE'
                });
    
                if (response.ok) {
                    location.reload();
                } else {
                    showAlert('Đã xảy ra lỗi khi xóa khách hàng', 'danger');
                }
            });
        }

        async function deleteManyCustomers(customerIds) {
            let response = await fetch('/Customers/DeleteMany', {
                method: 'DELETE',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(customerIds)
            });

            if (response.ok) {
                location.reload();
            } else {
                showAlert('Đã xảy ra lỗi khi xóa nhiều khách hàng', 'danger');
            }
        }
            
        function add() {
            $('#customerId').val('');
            $('#firstName').val('');
            $('#lastName').val('');
            $('#fullName').val('');
            $('#male').prop('checked', true);
            $('#phoneNumber').val('');
            $('#birthdate').val('');
            $('#idNo').val('');
            $('#nationality').val('Việt Nam');
            $('#customerModalLabel').text('Thêm');
            $('#customerModal').modal('show');
        }
        
        async function edit(customerId) {
            let customer = await getCustomerById(customerId);
            // Điền thông tin vào các trường trong modal
            $('#customerId').val(customer.id);
            $('#firstName').val(customer.firstName);
            $('#lastName').val(customer.lastName);
            $('#fullName').val(customer.fullName);
            
            if (customer.sex) {
                $('#male').prop('checked', true);    
            } else {
                $('#female').prop('checked', true);
            }
            
            $('#phoneNumber').val(customer.phoneNumber);
            
            let birthdate = new Date(customer.birthdate);
                
            // Chuyển đổi birthdate thành định dạng yyyy-mm-dd
            let day = birthdate.getDate().toString().padStart(2, '0');
            let month = (birthdate.getMonth() + 1).toString().padStart(2, '0');
            let year = birthdate.getFullYear();
            let formattedBirthdate = `${year}-${month}-${day}`;
        
            // Gán giá trị đã định dạng vào trường birthdate
            $('#birthdate').val(formattedBirthdate);
            
            $('#idNo').val(customer.idNo);
            $('#nationality').val(customer.nationality);
            $('#customerModalLabel').text('Sửa'); // Cập nhật tên của modal
            $('#customerModal').modal('show');
        }

        function saveCustomer() {
            let id = $('#customerId').val();
            let firstName = $('#firstName').val();
            let lastName = $('#lastName').val();
            let fullName = $('#fullName').val();
            let sex = $('#male').is(':checked');
            let phoneNumber = $('#phoneNumber').val();
            let idNo = $('#idNo').val();
            let birthdateInput = $('#birthdate').val();
            let birthdateObject = new Date(birthdateInput);
            let birthdate = birthdateObject.toISOString();
            let nationality = $('#nationality').val();
            
           let customer = {
               id,
               firstName,
               lastName,
               fullName,
               sex,
               phoneNumber,
               birthdate,
               idNo,
               nationality    
           }
            
            if (id) {
                updateCustomer(id, customer);
            } else {
                createCustomer(customer);
            }

            // Đóng modal
            $('#customerModal').modal('hide');
        }

        function updateDeleteButton() {
            let checkedCheckboxes = $('.rowCheckbox:checked').length;
            $('#deleteButton').prop('disabled', checkedCheckboxes === 0);
        }

        function deleteSelected() {
            // Lấy danh sách customerIds của các khách hàng được chọn
            let selectedCustomerIds = $('input[name="selectedCustomers"]:checked').map(function () {
                return $(this).val();
            }).get();

            showConfirmDialog('Bạn có chắc chắn muốn xóa các khách hàng đã chọn không?', () => {
                // Xóa các khách hàng được chọn
                deleteManyCustomers(selectedCustomerIds);
            });
        }
    </script>
}